//
//   @media-queries
// --------------------------------------------------------
//  _1_foundations/_mixins/_media-queries.scss
// --------------------------------------------------------
//
//  Use this mixin to have media-queries that will degrade
//  gracefully for older versions of IE that do not support
//  media queries.
//
//  inspired by http://alwaystwisted.com/post.php?s=2013-04-01-my-media-query-mixin
//
//  By default, this mixin outputs media queries just as
//  Sass would. Set the $no-queries variable at the top of
//  your style sheet to override this.
//
//  For "Old IE" style sheets that shouldn't get the media
//  queries (only the fall-back styles), use:
//
//  $no-queries: true;
//
//  Several arguments can be passed to alter the way the
//  mixin behaves.
//
//  Base Example:
//
//  .test {
//      background: #fff;
//      @include media('screen and (min-width: 400px) and (max-width: 600px)') {
//          color: #000;
//      }
//  }
//
//  The entire query part of the media query is passed as
//  an argument. You can use variables for your dimensions
//  by using interpolation â€“ like #{$bp-small}
//
//  You can specify when styles in media queries shouldn't
//  be sent to "fallback" browsers.
//
//  .test {
//      background: #fff;
//      @include media('screen and (min-width: 400px) and (max-width: 600px)', $no-query-fallback: false) {
//          color: #000;
//      }
//  }
//
//  Note the "no-query-fallback" argument.
//
// --------------------------------------------------------

$no-queries: false !default;




@mixin media($query, $no-query-fallback: true) {

    @if $no-queries == false  {
        @media #{$query} {
            @content;
        }
    }

    @if $no-query-fallback == true and $no-queries == true {
        @content;
    }
}




//
//   @hidpi
// --------------------------------------------------------
//
//  HiDPI mixin. Default value set to 1.3 to target Google
//  Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)
//
//  See http://signalvnoise.com/posts/3271-easy-retina-ready-images-using-scss
//  for information on using this with background images.
//
//  Example:
//
//  .feature {
//      @inclue hidpi {
//          background-image: url($image);
//          background-size: $width $height;
//      }
//  }
//
//  Use images that are scaled by 2.
//
// --------------------------------------------------------

@mixin hidpi($ratio: 1.3) {
  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),
  only screen and (min--moz-device-pixel-ratio: $ratio),
  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),
  only screen and (min-resolution: #{round($ratio*96)}dpi),
  only screen and (min-resolution: #{$ratio}dppx) {
    @content;
  }
}